// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: server/comment/comment.proto

package comment

import (
	global "github.com/east-eden/server/proto/global"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通过topic查询评论
type QueryCommentTopicRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *global.CommentTopic `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
}

func (x *QueryCommentTopicRq) Reset() {
	*x = QueryCommentTopicRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCommentTopicRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCommentTopicRq) ProtoMessage() {}

func (x *QueryCommentTopicRq) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCommentTopicRq.ProtoReflect.Descriptor instead.
func (*QueryCommentTopicRq) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{0}
}

func (x *QueryCommentTopicRq) GetTopic() *global.CommentTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type QueryCommentTopicRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadatas []*global.CommentMetadata `protobuf:"bytes,1,rep,name=Metadatas,proto3" json:"Metadatas,omitempty"` // 评论数据
}

func (x *QueryCommentTopicRs) Reset() {
	*x = QueryCommentTopicRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCommentTopicRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCommentTopicRs) ProtoMessage() {}

func (x *QueryCommentTopicRs) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCommentTopicRs.ProtoReflect.Descriptor instead.
func (*QueryCommentTopicRs) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{1}
}

func (x *QueryCommentTopicRs) GetMetadatas() []*global.CommentMetadata {
	if x != nil {
		return x.Metadatas
	}
	return nil
}

// 按赞数排行区间查询评论
type QueryCommentTopicRangeRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *global.CommentTopic `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Start int64                `protobuf:"varint,2,opt,name=Start,proto3" json:"Start,omitempty"`
	End   int64                `protobuf:"varint,3,opt,name=End,proto3" json:"End,omitempty"` // End == -1时代表查询所有数据
}

func (x *QueryCommentTopicRangeRq) Reset() {
	*x = QueryCommentTopicRangeRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCommentTopicRangeRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCommentTopicRangeRq) ProtoMessage() {}

func (x *QueryCommentTopicRangeRq) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCommentTopicRangeRq.ProtoReflect.Descriptor instead.
func (*QueryCommentTopicRangeRq) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{2}
}

func (x *QueryCommentTopicRangeRq) GetTopic() *global.CommentTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *QueryCommentTopicRangeRq) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *QueryCommentTopicRangeRq) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type QueryCommentTopicRangeRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic     *global.CommentTopic      `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Start     int64                     `protobuf:"varint,2,opt,name=Start,proto3" json:"Start,omitempty"`
	End       int64                     `protobuf:"varint,3,opt,name=End,proto3" json:"End,omitempty"`
	Metadatas []*global.CommentMetadata `protobuf:"bytes,4,rep,name=Metadatas,proto3" json:"Metadatas,omitempty"`
}

func (x *QueryCommentTopicRangeRs) Reset() {
	*x = QueryCommentTopicRangeRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCommentTopicRangeRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCommentTopicRangeRs) ProtoMessage() {}

func (x *QueryCommentTopicRangeRs) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCommentTopicRangeRs.ProtoReflect.Descriptor instead.
func (*QueryCommentTopicRangeRs) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{3}
}

func (x *QueryCommentTopicRangeRs) GetTopic() *global.CommentTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *QueryCommentTopicRangeRs) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *QueryCommentTopicRangeRs) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *QueryCommentTopicRangeRs) GetMetadatas() []*global.CommentMetadata {
	if x != nil {
		return x.Metadatas
	}
	return nil
}

// 修改按赞数
type ModCommentThumbsRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic     *global.CommentTopic `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	CommentId int64                `protobuf:"varint,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论唯一id
	ModThumbs int32                `protobuf:"varint,3,opt,name=ModThumbs,proto3" json:"ModThumbs,omitempty"`
}

func (x *ModCommentThumbsRq) Reset() {
	*x = ModCommentThumbsRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCommentThumbsRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCommentThumbsRq) ProtoMessage() {}

func (x *ModCommentThumbsRq) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCommentThumbsRq.ProtoReflect.Descriptor instead.
func (*ModCommentThumbsRq) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{4}
}

func (x *ModCommentThumbsRq) GetTopic() *global.CommentTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *ModCommentThumbsRq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ModCommentThumbsRq) GetModThumbs() int32 {
	if x != nil {
		return x.ModThumbs
	}
	return 0
}

type ModCommentThumbsRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ModCommentThumbsRs) Reset() {
	*x = ModCommentThumbsRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModCommentThumbsRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModCommentThumbsRs) ProtoMessage() {}

func (x *ModCommentThumbsRs) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModCommentThumbsRs.ProtoReflect.Descriptor instead.
func (*ModCommentThumbsRs) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{5}
}

func (x *ModCommentThumbsRs) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 踢掉其他节点评论缓存
type KickCommentTopicDataRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic              *global.CommentTopic `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	CommentTopicNodeId int32                `protobuf:"varint,2,opt,name=CommentTopicNodeId,proto3" json:"CommentTopicNodeId,omitempty"` // 所在服务节点id
}

func (x *KickCommentTopicDataRq) Reset() {
	*x = KickCommentTopicDataRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickCommentTopicDataRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickCommentTopicDataRq) ProtoMessage() {}

func (x *KickCommentTopicDataRq) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickCommentTopicDataRq.ProtoReflect.Descriptor instead.
func (*KickCommentTopicDataRq) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{6}
}

func (x *KickCommentTopicDataRq) GetTopic() *global.CommentTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *KickCommentTopicDataRq) GetCommentTopicNodeId() int32 {
	if x != nil {
		return x.CommentTopicNodeId
	}
	return 0
}

type KickCommentTopicDataRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *global.CommentTopic `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Error string               `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *KickCommentTopicDataRs) Reset() {
	*x = KickCommentTopicDataRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_comment_comment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickCommentTopicDataRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickCommentTopicDataRs) ProtoMessage() {}

func (x *KickCommentTopicDataRs) ProtoReflect() protoreflect.Message {
	mi := &file_server_comment_comment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickCommentTopicDataRs.ProtoReflect.Descriptor instead.
func (*KickCommentTopicDataRs) Descriptor() ([]byte, []int) {
	return file_server_comment_comment_proto_rawDescGZIP(), []int{7}
}

func (x *KickCommentTopicDataRs) GetTopic() *global.CommentTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *KickCommentTopicDataRs) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_server_comment_comment_proto protoreflect.FileDescriptor

var file_server_comment_comment_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x13,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x71, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x4b,
	0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x6d, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x71, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x22, 0x7b, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x73, 0x52, 0x71, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4d, 0x6f, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x22, 0x2a, 0x0a,
	0x12, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62,
	0x73, 0x52, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x73, 0x0a, 0x16, 0x4b, 0x69, 0x63,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x71, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x2e,
	0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x59,
	0x0a, 0x16, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xf1, 0x02, 0x0a, 0x0e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x11,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x71, 0x1a,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x73, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x71, 0x1a, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73,
	0x52, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x52, 0x73, 0x22,
	0x00, 0x12, 0x5a, 0x0a, 0x14, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x22, 0x00, 0x42, 0x32, 0x5a,
	0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x61, 0x73, 0x74,
	0x2d, 0x65, 0x64, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_comment_comment_proto_rawDescOnce sync.Once
	file_server_comment_comment_proto_rawDescData = file_server_comment_comment_proto_rawDesc
)

func file_server_comment_comment_proto_rawDescGZIP() []byte {
	file_server_comment_comment_proto_rawDescOnce.Do(func() {
		file_server_comment_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_comment_comment_proto_rawDescData)
	})
	return file_server_comment_comment_proto_rawDescData
}

var file_server_comment_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_server_comment_comment_proto_goTypes = []interface{}{
	(*QueryCommentTopicRq)(nil),      // 0: comment.QueryCommentTopicRq
	(*QueryCommentTopicRs)(nil),      // 1: comment.QueryCommentTopicRs
	(*QueryCommentTopicRangeRq)(nil), // 2: comment.QueryCommentTopicRangeRq
	(*QueryCommentTopicRangeRs)(nil), // 3: comment.QueryCommentTopicRangeRs
	(*ModCommentThumbsRq)(nil),       // 4: comment.ModCommentThumbsRq
	(*ModCommentThumbsRs)(nil),       // 5: comment.ModCommentThumbsRs
	(*KickCommentTopicDataRq)(nil),   // 6: comment.KickCommentTopicDataRq
	(*KickCommentTopicDataRs)(nil),   // 7: comment.KickCommentTopicDataRs
	(*global.CommentTopic)(nil),      // 8: proto.CommentTopic
	(*global.CommentMetadata)(nil),   // 9: proto.CommentMetadata
}
var file_server_comment_comment_proto_depIdxs = []int32{
	8,  // 0: comment.QueryCommentTopicRq.Topic:type_name -> proto.CommentTopic
	9,  // 1: comment.QueryCommentTopicRs.Metadatas:type_name -> proto.CommentMetadata
	8,  // 2: comment.QueryCommentTopicRangeRq.Topic:type_name -> proto.CommentTopic
	8,  // 3: comment.QueryCommentTopicRangeRs.Topic:type_name -> proto.CommentTopic
	9,  // 4: comment.QueryCommentTopicRangeRs.Metadatas:type_name -> proto.CommentMetadata
	8,  // 5: comment.ModCommentThumbsRq.Topic:type_name -> proto.CommentTopic
	8,  // 6: comment.KickCommentTopicDataRq.Topic:type_name -> proto.CommentTopic
	8,  // 7: comment.KickCommentTopicDataRs.Topic:type_name -> proto.CommentTopic
	0,  // 8: comment.CommentService.QueryCommentTopic:input_type -> comment.QueryCommentTopicRq
	2,  // 9: comment.CommentService.QueryCommentTopicRange:input_type -> comment.QueryCommentTopicRangeRq
	4,  // 10: comment.CommentService.ModCommentThumbs:input_type -> comment.ModCommentThumbsRq
	6,  // 11: comment.CommentService.KickCommentTopicData:input_type -> comment.KickCommentTopicDataRq
	1,  // 12: comment.CommentService.QueryCommentTopic:output_type -> comment.QueryCommentTopicRs
	3,  // 13: comment.CommentService.QueryCommentTopicRange:output_type -> comment.QueryCommentTopicRangeRs
	5,  // 14: comment.CommentService.ModCommentThumbs:output_type -> comment.ModCommentThumbsRs
	7,  // 15: comment.CommentService.KickCommentTopicData:output_type -> comment.KickCommentTopicDataRs
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_server_comment_comment_proto_init() }
func file_server_comment_comment_proto_init() {
	if File_server_comment_comment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_comment_comment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCommentTopicRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_comment_comment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCommentTopicRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_comment_comment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCommentTopicRangeRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_comment_comment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCommentTopicRangeRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_comment_comment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCommentThumbsRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_comment_comment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModCommentThumbsRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_comment_comment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickCommentTopicDataRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_comment_comment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickCommentTopicDataRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_comment_comment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_comment_comment_proto_goTypes,
		DependencyIndexes: file_server_comment_comment_proto_depIdxs,
		MessageInfos:      file_server_comment_comment_proto_msgTypes,
	}.Build()
	File_server_comment_comment_proto = out.File
	file_server_comment_comment_proto_rawDesc = nil
	file_server_comment_comment_proto_goTypes = nil
	file_server_comment_comment_proto_depIdxs = nil
}
