// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: server/rank/rank.proto

package rank

import (
	global "e.coding.net/mmstudio/blade/server/proto/global"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 设置排行榜分数
type SetRankScoreRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankId int32           `protobuf:"varint,1,opt,name=RankId,proto3" json:"RankId,omitempty"` // 排行榜id
	Raw    *global.RankRaw `protobuf:"bytes,2,opt,name=Raw,proto3" json:"Raw,omitempty"`        // 元数据
}

func (x *SetRankScoreRq) Reset() {
	*x = SetRankScoreRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_rank_rank_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRankScoreRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRankScoreRq) ProtoMessage() {}

func (x *SetRankScoreRq) ProtoReflect() protoreflect.Message {
	mi := &file_server_rank_rank_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRankScoreRq.ProtoReflect.Descriptor instead.
func (*SetRankScoreRq) Descriptor() ([]byte, []int) {
	return file_server_rank_rank_proto_rawDescGZIP(), []int{0}
}

func (x *SetRankScoreRq) GetRankId() int32 {
	if x != nil {
		return x.RankId
	}
	return 0
}

func (x *SetRankScoreRq) GetRaw() *global.RankRaw {
	if x != nil {
		return x.Raw
	}
	return nil
}

type SetRankScoreRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRankScoreRs) Reset() {
	*x = SetRankScoreRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_rank_rank_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRankScoreRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRankScoreRs) ProtoMessage() {}

func (x *SetRankScoreRs) ProtoReflect() protoreflect.Message {
	mi := &file_server_rank_rank_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRankScoreRs.ProtoReflect.Descriptor instead.
func (*SetRankScoreRs) Descriptor() ([]byte, []int) {
	return file_server_rank_rank_proto_rawDescGZIP(), []int{1}
}

// 踢掉其他节点排行榜缓存
type KickRankDataRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankId     int32 `protobuf:"varint,1,opt,name=RankId,proto3" json:"RankId,omitempty"`         // 排行榜id
	RankNodeId int32 `protobuf:"varint,2,opt,name=RankNodeId,proto3" json:"RankNodeId,omitempty"` // 所在rank服务节点id
}

func (x *KickRankDataRq) Reset() {
	*x = KickRankDataRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_rank_rank_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickRankDataRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickRankDataRq) ProtoMessage() {}

func (x *KickRankDataRq) ProtoReflect() protoreflect.Message {
	mi := &file_server_rank_rank_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickRankDataRq.ProtoReflect.Descriptor instead.
func (*KickRankDataRq) Descriptor() ([]byte, []int) {
	return file_server_rank_rank_proto_rawDescGZIP(), []int{2}
}

func (x *KickRankDataRq) GetRankId() int32 {
	if x != nil {
		return x.RankId
	}
	return 0
}

func (x *KickRankDataRq) GetRankNodeId() int32 {
	if x != nil {
		return x.RankNodeId
	}
	return 0
}

type KickRankDataRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankId int32  `protobuf:"varint,1,opt,name=RankId,proto3" json:"RankId,omitempty"` // 排行榜id
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *KickRankDataRs) Reset() {
	*x = KickRankDataRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_rank_rank_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickRankDataRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickRankDataRs) ProtoMessage() {}

func (x *KickRankDataRs) ProtoReflect() protoreflect.Message {
	mi := &file_server_rank_rank_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickRankDataRs.ProtoReflect.Descriptor instead.
func (*KickRankDataRs) Descriptor() ([]byte, []int) {
	return file_server_rank_rank_proto_rawDescGZIP(), []int{3}
}

func (x *KickRankDataRs) GetRankId() int32 {
	if x != nil {
		return x.RankId
	}
	return 0
}

func (x *KickRankDataRs) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_server_rank_rank_proto protoreflect.FileDescriptor

var file_server_rank_rank_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x2f, 0x72, 0x61,
	0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x13,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x03, 0x52, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x77, 0x52, 0x03, 0x52, 0x61, 0x77, 0x22,
	0x10, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x73, 0x22, 0x48, 0x0a, 0x0e, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x4b,
	0x69, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52,
	0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x89, 0x01, 0x0a, 0x0b,
	0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x53,
	0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x2e, 0x72, 0x61,
	0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x71, 0x1a, 0x14, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0c, 0x4b, 0x69, 0x63,
	0x6b, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x72, 0x61, 0x6e, 0x6b,
	0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x71, 0x1a,
	0x14, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x73, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x65, 0x2e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x6d, 0x6d, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x2f, 0x62, 0x6c, 0x61, 0x64, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_rank_rank_proto_rawDescOnce sync.Once
	file_server_rank_rank_proto_rawDescData = file_server_rank_rank_proto_rawDesc
)

func file_server_rank_rank_proto_rawDescGZIP() []byte {
	file_server_rank_rank_proto_rawDescOnce.Do(func() {
		file_server_rank_rank_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_rank_rank_proto_rawDescData)
	})
	return file_server_rank_rank_proto_rawDescData
}

var file_server_rank_rank_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_server_rank_rank_proto_goTypes = []interface{}{
	(*SetRankScoreRq)(nil), // 0: rank.SetRankScoreRq
	(*SetRankScoreRs)(nil), // 1: rank.SetRankScoreRs
	(*KickRankDataRq)(nil), // 2: rank.KickRankDataRq
	(*KickRankDataRs)(nil), // 3: rank.KickRankDataRs
	(*global.RankRaw)(nil), // 4: proto.RankRaw
}
var file_server_rank_rank_proto_depIdxs = []int32{
	4, // 0: rank.SetRankScoreRq.Raw:type_name -> proto.RankRaw
	0, // 1: rank.RankService.SetRankScore:input_type -> rank.SetRankScoreRq
	2, // 2: rank.RankService.KickRankData:input_type -> rank.KickRankDataRq
	1, // 3: rank.RankService.SetRankScore:output_type -> rank.SetRankScoreRs
	3, // 4: rank.RankService.KickRankData:output_type -> rank.KickRankDataRs
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_server_rank_rank_proto_init() }
func file_server_rank_rank_proto_init() {
	if File_server_rank_rank_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_rank_rank_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRankScoreRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_rank_rank_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRankScoreRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_rank_rank_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickRankDataRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_rank_rank_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickRankDataRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_rank_rank_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_rank_rank_proto_goTypes,
		DependencyIndexes: file_server_rank_rank_proto_depIdxs,
		MessageInfos:      file_server_rank_rank_proto_msgTypes,
	}.Build()
	File_server_rank_rank_proto = out.File
	file_server_rank_rank_proto_rawDesc = nil
	file_server_rank_rank_proto_goTypes = nil
	file_server_rank_rank_proto_depIdxs = nil
}
